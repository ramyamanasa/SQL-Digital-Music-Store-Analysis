Questions and Answers 

--Q1 : Who is the senior most employee based on job title?

SELECT * FROM employee
ORDER BY levels DESC
LIMIT 1 

Result : Mohan Madan - Senior General Manager is the most senior employee


--Q2. which countries have the most Invoices?

SELECT COUNT(*) AS C, billing_country 
FROM invoice
GROUP BY billing_country
ORDER BY C DESC

Result: USA, Canada, Brazil have the most Invoices.


--Q3. What are the top 3 values of total invoice

SELECT total FROM invoice
ORDER BY total DESC
LIMIT 3

Result : 23.759999999999998 , 19.8 and 19.8.


Q4. Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. Write a query that returns one city that has the highest sum of invoice totals. Return both the city name & sum of all invoice totals.

SELECT billing_city, SUM(total) AS total
FROM invoice
GROUP BY billing_city
ORDER BY total DESC
LIMIT 1;

Result : Prague is the city which has the highest invoice_total hence there was highest sales over there.


--Q5. Who is the best customer? The customer who has spent the most money will be declared the best customer. Write a query that returns the person who has spent the most money.

--Have to find the customer who has the highest invoice total hence we join customer and invoice tables
SELECT customer.customer_id, customer.first_name, customer.last_name, SUM(invoice.total) AS total 
FROM CUSTOMER
JOIN invoice ON customer.customer_id = invoice.customer_id
GROUP BY customer.customer_id
ORDER BY total DESC
LIMIT 1

Result : R Madhav is the best customer who has spent 144.54 $ 


--Q6. Write query to return the email, first name, last name, & Genre of all Rock Music listeners. Return your list ordered alphabetically by email starting with A 

SELECT DISTINCT email, first_name, last_name
FROM customer
JOIN invoice ON customer.customer_id = invoice.customer_id
JOIN invoice_line ON invoice.invoice_id = invoice_line.invoice_id
--Filer by Rock listners
WHERE track_id IN (
	SELECT track_id FROM track
	JOIN genre ON track.genre_id = genre.genre_id
	WHERE genre.name LIKE 'Rock' --TRACK id of only ROCK genre
)
ORDER BY email;

Result : "aaronmitchell@yahoo.ca", "Aaron ", "Mitchell " is the email, first_name and last_name of the first Rock listener Ordered by email.



--Q7. Let's invite the artists who have written the most rock music in our dataset. Write a query that returns the Artist name and total track count of the top 10 rock bands 

SELECT artist.artist_id, artist.name, COUNT(track.track_id) AS num_of_songs
FROM artist
JOIN album ON album.artist_id = artist.artist_id
JOIN track ON track.album_id = album.album_id
WHERE genre_id IN (SELECT genre_id FROM genre
		   WHERE name LIKE 'Rock')
GROUP BY artist.artist_id
ORDER BY num_of_songs DESC
LIMIT 10;


Result : "Led Zeppelin" , "U2", "Deep Purple" etc are the artists who have written the most rock music in our dataset.



--Q8. Return all the track names that have a song length longer than the average song length. Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first

SELECT name, milliseconds FROM track
WHERE milliseconds > (SELECT AVG(milliseconds) as avg_track_length
		      FROM track)
ORDER BY milliseconds DESC;

Result : "Occupation / Precipice" with 5286953 milliseconds has the song length higher than average song length.